// Generated by text/template; DO NOT EDIT
package database

import (
	"subLease/src/server/domain"
)

{{ $pascalCased := .Entity | PascalCase }}

type {{ $pascalCased }}Update struct {
{{- range .Fields }}
    {{ .Identifier }} *{{ .TypeDeclaration -}}
{{ end }}
}

func ({{ .Abbreviation }} *{{ $pascalCased }}Update) Update{{ $pascalCased }}WithValuesFrom(e *domain.{{ $pascalCased }}, database Database) {
{{- range .Fields }}
    if {{ $.Abbreviation }}.{{ .Identifier }} != nil {
    {{- if .IsDomainEntity }}
        {{ if . | IsSliceType }}
            e.{{ .Identifier | Capitalize }} = database.Get{{ .Identifier | PascalCase }}ById(*{{ $.Abbreviation }}.{{ .Identifier }})
        {{ else }}
		if {{ .Identifier | Decapitalize }}, found := database.Get{{ .Identifier | Capitalize }}(*{{ $.Abbreviation }}.{{ .Identifier | Capitalize }}); found {
            e.{{ .Identifier | Capitalize }} = {{ .Identifier | Decapitalize }}
		}
        {{ end }}
    {{- else }}
		e.{{ .Identifier }} = *{{ $.Abbreviation }}.{{ .Identifier }}
    {{- end }}
    }
{{- end }}
}

